●Seleziona tutti gli ospiti che sono stati identificati con la carta di identità
soluzione:
SELECT *
 FROM ospiti
 WHERE document_type LIKE 'ci'

●Seleziona tutti gli ospiti che sono nati dopo il 1988
soluzione:
SELECT *
 FROM ospiti 
 WHERE YEAR(date_of_birth) > 1988

●Seleziona tutti gli ospiti che hanno più di 20 anni (al momento dell’esecuzione della query)
soluzione:
SELECT name, lastname, YEAR(date_of_birth) AS 'year_of_birth', YEAR( NOW()) AS 'actual_year', YEAR( NOW()) - YEAR(date_of_birth) AS'age_now' 
 FROM ospiti 
 WHERE YEAR(NOW()) - YEAR(date_of_birth) > 20

●Seleziona tutti gli ospiti il cui nome inizia con la D
soluzione:
SELECT * 
 FROM ospiti 
 WHERE name LIKE 'D%'

●Calcola il totale degli ordini accepted
soluzione:
SELECT COUNT(*) 
  FROM pagamenti 
  WHERE status LIKE 'accepted'

●Qual è il prezzo massimo pagato?
soluzione:
SELECT MAX(Price)
  FROM pagamenti 
  WHERE status LIKE 'accepted'

●Seleziona gli ospiti riconosciuti con patente e nati nel 1975
soluzione:
SELECT *
 FROM ospiti 
 WHERE document_type LIKE 'driver_license' AND YEAR('date_of_birth') = 1975

●Quanti paganti sono anche ospiti?
soluzione:
 SELECT *
  FROM paganti
  WHERE ospiti_id  <> 'NULL' 


●Quanti posti letto ha l’hotel in totale?
soluzione:
SELECT SUM(beds) 
 FROM stanze

Group by
●Conta gli ospiti raggruppandoli per anno di nascita
soluzione:
SELECT YEAR('birth_of_birth') AS 'date_birth', COUNT(*) AS 'number_ospiti' 
 FROM ospiti 
  GROUP BY YEAR('birth_of_birth')

●Somma i prezzi dei pagamenti raggruppandoli per status
soluzione:
SELECT status, SUM(price) 
 FROM pagamenti 
 GROUP BY status

●Conta quante volte è stata prenotata ogni stanza
soluzione:
SELECT stanza_id AS'numero_stanza', COUNT(*) AS 'numero_di_prenotazioni'
 FROM prenotazioni 
  GROUP BY stanza_id

●Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti
soluzione:
SELECT HOUR(created_at) AS 'ora_prenotazioni', COUNT(*) AS'risultato' 
 FROM prenotazioni 
 GROUP BY HOUR(created_at)

●Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?
soluzione:
SELECT ospite_id, COUNT(*) AS'prenotazioni_a_persona'
  FROM prenotazioni_has_ospiti 
  GROUP BY ospite_id


Join
●Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?
soluzione:
SELECT ospiti.name, ospiti.lastname, prenotazioni_has_ospiti.ospite_id, COUNT(ospite_id) AS'n_per_ospiti' 
FROM prenotazioni_has_ospiti 
   JOIN ospiti 
     ON prenotazioni_has_ospiti.ospite_id = ospiti.id 
   GROUP BY ospite_id 
   HAVING COUNT(ospite_id) > 2




●Stampare tutti gli ospiti per ogni prenotazione
soluzione:
SELECT * 
FROM prenotazioni_has_ospiti 
   JOIN ospiti 
      ON prenotazioni_has_ospiti.ospite_id = ospiti.id


●Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018
soluzione:
SELECT ospiti.created_at, ospiti.updated_at , ospiti.name, ospiti.lastname, paganti.name, pagamenti.price 
FROM pagamenti 
  JOIN paganti 
    ON pagamenti.pagante_id = paganti.id 
  JOIN ospiti 
    ON paganti.ospite_id = ospiti.id 
WHERE ospiti.created_at < '2018-06-01' AND ospiti.updated_at > '2018-05-01'


●Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano
soluzione:
SELECT stanze.floor, SUM(price) AS'totale_prezzi' 
FROM pagamenti 
  JOIN prenotazioni 
    ON pagamenti.prenotazione_id = prenotazioni.id 
  JOIN stanze 
    ON prenotazioni.stanza_id = stanze.id 
GROUP BY stanze.floor 
HAVING stanze.floor = 1

●Prendi i dati di fatturazione per la prenotazione con id=7
soluzione:

●Le stanze sono state tutte prenotate almeno una volta? (Visualizzare le stanze non ancora prenotate)
soluzione:
SELECT stanze.id AS'stanze_non_prenotate' 
FROM prenotazioni 
  RIGHT JOIN stanze 
     ON prenotazioni.stanza_id = stanze.id 
WHERE prenotazioni.stanza_id IS NULL
